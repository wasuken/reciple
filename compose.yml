services:
  php:
    container_name: php
    build:
      context: .
      dockerfile: Dockerfile.php
      args:
        USER_ID: ${USER_ID:-1000}
    working_dir: /var/www/html
    env_file: ./.env
    environment:
      - USER_ID=${USER_ID:-1000}
    volumes:
      - ./php:/var/www/html
    networks:
      - backend

  node:
    build:
      context: .
      dockerfile: Dockerfile.node
    container_name: node
    volumes:
      - ./node:/usr/src/app
      - /usr/src/app/node_modules
    working_dir: /usr/src/app
    networks:
      - backend

  mysql:
    image: mysql:8
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: recipe
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - backend

  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: rootpassword
    networks:
      - backend

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./src:/var/www/html
    ports:
      - "8080:80"
    depends_on:
      - php
      - phpmyadmin
    networks:
      - backend

volumes:
  db_data:

networks:
  backend:
