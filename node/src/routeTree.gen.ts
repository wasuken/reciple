/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as LoginImport } from "./routes/login";
import { Route as AuthImport } from "./routes/auth";
import { Route as IndexImport } from "./routes/index";
import { Route as OauthRedirectImport } from "./routes/oauth.redirect";
import { Route as AuthRecipesImport } from "./routes/auth/recipes";
import { Route as AuthDashboardImport } from "./routes/auth/dashboard";
import { Route as AuthRecipeNewImport } from "./routes/auth/recipe.new";
import { Route as AuthRecipeShowRecipeIdImport } from "./routes/auth/recipe.show.$recipeId";

// Create Virtual Routes

const AboutLazyImport = createFileRoute("/about")();

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: "/about",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/about.lazy").then((d) => d.Route));

const LoginRoute = LoginImport.update({
  path: "/login",
  getParentRoute: () => rootRoute,
} as any);

const AuthRoute = AuthImport.update({
  path: "/auth",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const OauthRedirectRoute = OauthRedirectImport.update({
  path: "/oauth/redirect",
  getParentRoute: () => rootRoute,
} as any);

const AuthRecipesRoute = AuthRecipesImport.update({
  path: "/recipes",
  getParentRoute: () => AuthRoute,
} as any);

const AuthDashboardRoute = AuthDashboardImport.update({
  path: "/dashboard",
  getParentRoute: () => AuthRoute,
} as any);

const AuthRecipeNewRoute = AuthRecipeNewImport.update({
  path: "/recipe/new",
  getParentRoute: () => AuthRoute,
} as any);

const AuthRecipeShowRecipeIdRoute = AuthRecipeShowRecipeIdImport.update({
  path: "/recipe/show/$recipeId",
  getParentRoute: () => AuthRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/auth": {
      id: "/auth";
      path: "/auth";
      fullPath: "/auth";
      preLoaderRoute: typeof AuthImport;
      parentRoute: typeof rootRoute;
    };
    "/login": {
      id: "/login";
      path: "/login";
      fullPath: "/login";
      preLoaderRoute: typeof LoginImport;
      parentRoute: typeof rootRoute;
    };
    "/about": {
      id: "/about";
      path: "/about";
      fullPath: "/about";
      preLoaderRoute: typeof AboutLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/auth/dashboard": {
      id: "/auth/dashboard";
      path: "/dashboard";
      fullPath: "/auth/dashboard";
      preLoaderRoute: typeof AuthDashboardImport;
      parentRoute: typeof AuthImport;
    };
    "/auth/recipes": {
      id: "/auth/recipes";
      path: "/recipes";
      fullPath: "/auth/recipes";
      preLoaderRoute: typeof AuthRecipesImport;
      parentRoute: typeof AuthImport;
    };
    "/oauth/redirect": {
      id: "/oauth/redirect";
      path: "/oauth/redirect";
      fullPath: "/oauth/redirect";
      preLoaderRoute: typeof OauthRedirectImport;
      parentRoute: typeof rootRoute;
    };
    "/auth/recipe/new": {
      id: "/auth/recipe/new";
      path: "/recipe/new";
      fullPath: "/auth/recipe/new";
      preLoaderRoute: typeof AuthRecipeNewImport;
      parentRoute: typeof AuthImport;
    };
    "/auth/recipe/show/$recipeId": {
      id: "/auth/recipe/show/$recipeId";
      path: "/recipe/show/$recipeId";
      fullPath: "/auth/recipe/show/$recipeId";
      preLoaderRoute: typeof AuthRecipeShowRecipeIdImport;
      parentRoute: typeof AuthImport;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthRoute: AuthRoute.addChildren({
    AuthDashboardRoute,
    AuthRecipesRoute,
    AuthRecipeNewRoute,
    AuthRecipeShowRecipeIdRoute,
  }),
  LoginRoute,
  AboutLazyRoute,
  OauthRedirectRoute,
});

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/login",
        "/about",
        "/oauth/redirect"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth.tsx",
      "children": [
        "/auth/dashboard",
        "/auth/recipes",
        "/auth/recipe/new",
        "/auth/recipe/show/$recipeId"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/auth/dashboard": {
      "filePath": "auth/dashboard.tsx",
      "parent": "/auth"
    },
    "/auth/recipes": {
      "filePath": "auth/recipes.tsx",
      "parent": "/auth"
    },
    "/oauth/redirect": {
      "filePath": "oauth.redirect.tsx"
    },
    "/auth/recipe/new": {
      "filePath": "auth/recipe.new.tsx",
      "parent": "/auth"
    },
    "/auth/recipe/show/$recipeId": {
      "filePath": "auth/recipe.show.$recipeId.tsx",
      "parent": "/auth"
    }
  }
}
ROUTE_MANIFEST_END */
